steps:

### Build
  - id: 'build'
    name: 'gcr.io/cloud_builders/docker'
    dir: 'microservices/backend'
    entrypoint: 'bash'
    args: 
      - '-c'
      - |
          [[ "$BRANCH_NAME" ]] && VERSION=${BRANCH_NAME}-${SHORT_SHA}
          [[ "$TAG_NAME" ]] && VERSION=$TAG_NAME
          docker build -t gcr.io/${PROJECT_ID}/cloud_build/backend:$${VERSION} .


### Test


### Publish
  - id: 'publish'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: 
      - '-c'
      - |
          [[ "$BRANCH_NAME" ]] && VERSION=${BRANCH_NAME}-${SHORT_SHA}
          [[ "$TAG_NAME" ]] && VERSION=$TAG_NAME
          docker push gcr.io/${PROJECT_ID}/cloud_build/backend:$${VERSION}


### Deploy
  - id: 'deploy'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: bash
    env:
      - 'KUBECONFIG=/kube/config'
    args:
      - '-c'
      - |
          [[ "$BRANCH_NAME" ]] && VERSION=${BRANCH_NAME}-${SHORT_SHA} BRANCH=$BRANCH_NAME
          [[ "$TAG_NAME" ]] && VERSION=$TAG_NAME BRANCH=master
          IMAGE_NAME=gcr.io/${PROJECT_ID}/cloud_build/backend:$${VERSION}
      
          if [[ "$TAG_NAME" ]]; then
            TARGET_ENV=prod
            CLUSTER_NAME=$_CLUSTER_PROD
          elif [[ $${BRANCH} == "master" ]]; then
            TARGET_ENV=canary
            CLUSTER_NAME=$_CLUSTER_PROD
          else 
            TARGET_ENV=dev
            CLUSTER_NAME=$_CLUSTER_DEV
          fi
          
          gcloud container clusters get-credentials $${CLUSTER_NAME} --zone=$_ZONE
          
          sed -i "s#_IMAGE_NAME#$${IMAGE_NAME}#g" kubernetes/backend/deployments/$${TARGET_ENV}/*.yaml
          kubectl apply --recursive -f kubernetes/backend/deployments/$${TARGET_ENV}/*.yaml


substitutions:
  _ZONE: europe-west3-a
  _CLUSTER_PROD: standard-cluster-1
  _CLUSTER_DEV: models-cluster-dev